{"version":3,"file":"static/js/170.0b10a125.chunk.js","mappings":"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","sources":["components/students/StudentSearchBar.tsx","actions/DeleteAction.ts","components/Ui/LunchDeleteModal.tsx","components/students/DeleteStudent.tsx","components/students/StudentItem.tsx","components/students/StudentPagination.tsx","components/students/StudentsList.tsx","pages/students/Students.tsx","redux/hooks/hooks.ts"],"sourcesContent":["import React from \"react\";\r\n\r\nconst StudentSearchBar = () => {\r\n  return (\r\n    <>\r\n      <div className='col-auto'>\r\n        <form>\r\n          <div className='mb-2'>\r\n            <label htmlFor='inputPassword2' className='visually-hidden'>\r\n              Search\r\n            </label>\r\n            <input\r\n              type='search'\r\n              className='form-control'\r\n              id='inputPassword2'\r\n              placeholder='Search...'\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentSearchBar;\r\n","import axios from \"axios\";\r\n\r\n// deleteField\r\nexport const deleteField = async (name: string, id: string) => {\r\n  try {\r\n    const { data } = await axios.delete(`/${name}/${id}`);\r\n\r\n    return data;\r\n  } catch (error: any) {\r\n    console.log(error);\r\n\r\n    return {\r\n      status: 404,\r\n      message: error.response.data.message,\r\n    };\r\n  }\r\n};\r\n","interface ButtonOptions {\r\n  modalName: string;\r\n  title: any;\r\n  text: string;\r\n  deleteButton: any;\r\n}\r\n\r\nconst LunchDeleteModal = ({\r\n  modalName,\r\n  title,\r\n  text,\r\n  deleteButton,\r\n}: ButtonOptions) => {\r\n  return (\r\n    <>\r\n      <span\r\n        className='action-icon'\r\n        data-bs-toggle='modal'\r\n        data-bs-target={`#${modalName}`}\r\n      >\r\n        {title}\r\n      </span>\r\n      <div\r\n        id={`${modalName}`}\r\n        className='modal fade'\r\n        tabIndex={-1}\r\n        role='dialog'\r\n        aria-hidden='true'\r\n      >\r\n        <div\r\n          className='modal-dialog dialog-centered modal-md backdrop'\r\n          style={{ marginTop: \"140px\" }}\r\n        >\r\n          <div className='modal-content modal-filled bg-danger'>\r\n            <div className='modal-body p-4'>\r\n              <div className='text-center'>\r\n                {/* <i className='fa fa-user h1 text-white' /> */}\r\n                <h4 className='mt-2 text-white'>Attention !</h4>\r\n                <p\r\n                  style={{ display: \"block\", fontWeight: \"bold\" }}\r\n                  className='mt-3 text-white'\r\n                >\r\n                  {text}\r\n                </p>\r\n                {deleteButton}\r\n                &nbsp;&nbsp;\r\n                <button\r\n                  type='button'\r\n                  className='btn btn-light my-2'\r\n                  data-bs-dismiss='modal'\r\n                >\r\n                  Annuler\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* /.modal-content */}\r\n        </div>\r\n        {/* /.modal-dialog */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LunchDeleteModal;\r\n","import { useState } from \"react\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { deleteField } from \"../../actions/DeleteAction\";\r\nimport LunchDeleteModal from \"../Ui/LunchDeleteModal\";\r\nimport { useAppDispatch } from \"../../redux/hooks/hooks\";\r\nimport { studentDelete } from \"../../redux/StudentsSlice\";\r\n\r\ninterface IdOptions {\r\n  id: string;\r\n}\r\n\r\nconst DeleteStudent = ({ id }: IdOptions) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [dismisModal, setDismisModal] = useState(true);\r\n  // use dispatch to update\r\n  const dispatch = useAppDispatch();\r\n  // delete fonction\r\n  const deleteStudent = async () => {\r\n    setLoading(true);\r\n    const data = await deleteField(\"students\", id);\r\n    if (data.status === 404) {\r\n      setLoading(false);\r\n      toast.error(data.message);\r\n    } else {\r\n      setLoading(false);\r\n      setDismisModal(false);\r\n      dispatch(studentDelete(data));\r\n      toast.success(\"Etudiant supprimé avec succès\");\r\n    }\r\n  };\r\n  // dele components\r\n  const boutton = (\r\n    <>\r\n      <button\r\n        className='btn btn-light'\r\n        disabled={loading}\r\n        onClick={deleteStudent}\r\n        data-bs-dismiss={`${dismisModal && \"modal\"}`}\r\n      >\r\n        <span\r\n          className={`${loading && \"spinner-border\"} spinner-border-sm me-1`}\r\n          role='status'\r\n          aria-hidden='true'\r\n        />\r\n        <b>\r\n          {\" \"}\r\n          <i className='fa fa-trash'></i>{\" \"}\r\n          {!loading ? \"Supprimer\" : \"Chargement...\"}\r\n        </b>\r\n      </button>\r\n    </>\r\n  );\r\n\r\n  const BottomText = (\r\n    <>\r\n      <span style={{ color: \"white\", fontSize: \"13px\" }}>\r\n        <i className='fa fa-trash'></i>\r\n      </span>\r\n    </>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer\r\n        position='bottom-right'\r\n        autoClose={5000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n        theme='colored'\r\n      />\r\n      <LunchDeleteModal\r\n        modalName={`students${id}`}\r\n        title={BottomText}\r\n        text={\"Voulez vous vraiment supprimer cet etudiant ?\"}\r\n        deleteButton={boutton}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeleteStudent;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n// import DeleteEmployee from \"./DeleteEmployee\";\r\nimport DeleteStudent from \"./DeleteStudent\";\r\n\r\nconst StudentItem = ({ students }: any) => {\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td className='table-user'>\r\n          <span className='text-body fw-semibold'>\r\n            {students.person.nom}&nbsp;\r\n          </span>\r\n        </td>\r\n        <td>{students.person.prenom}</td>\r\n        <td>{students.person.telephone}</td>\r\n        <td>{students.person.email}</td>\r\n        <td>{students.person.date_naissance}</td>\r\n        <td>\r\n          <div className='dropdown'>\r\n            <Link to={`/dashbord/profile-students/${students.person.uuid}`}>\r\n              <button\r\n                className='btn btn-primary'\r\n                type='button'\r\n                style={{ fontWeight: \"bold\" }}\r\n              >\r\n                <i className='fa fa-user'></i>\r\n              </button>\r\n            </Link>{\" \"}\r\n            &nbsp;\r\n            <span></span>\r\n            <button\r\n              className='btn btn-danger btn-xs'\r\n              type='button'\r\n              style={{ fontWeight: \"bold\" }}\r\n            >\r\n              <DeleteStudent id={students.person.uuid} />\r\n            </button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentItem;\r\n","import type { PaginationProps } from \"antd\";\r\nimport { Pagination } from \"antd\";\r\nimport { useAppDispatch } from \"../../redux/hooks/hooks\";\r\nimport { GetStudents } from \"../../actions/StudentAction\";\r\n\r\nconst StudentPagination = (props: any) => {\r\n  const dispatch = useAppDispatch();\r\n\r\n  const onChange: PaginationProps[\"onChange\"] = async (pageNumber) => {};\r\n\r\n  const itemRender: PaginationProps[\"itemRender\"] = (\r\n    _,\r\n    type,\r\n    originalElement\r\n  ) => {\r\n    if (type === \"prev\") {\r\n      return <span style={{ cursor: \"pointer\" }}>Précédent</span>;\r\n    }\r\n    if (type === \"next\") {\r\n      return <span style={{ cursor: \"pointer\" }}>Suivante</span>;\r\n    }\r\n    return originalElement;\r\n  };\r\n  return (\r\n    <>\r\n      <p className='justify-content-end mb-0 mt-2'>\r\n        Page {props.meta.CurrentPage} sur {props.meta.lastPaginate} dans{\" \"}\r\n        {props.total} entrées{\" \"}\r\n      </p>\r\n      <p className='justify-content-end mb-0 mt-2' style={{ float: \"right\" }}>\r\n        <Pagination\r\n          defaultCurrent={1}\r\n          total={props.meta.total}\r\n          onChange={onChange}\r\n          pageSize={15}\r\n          showSizeChanger={false}\r\n          itemRender={itemRender}\r\n        />\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentPagination;\r\n","import { Empty } from \"antd\";\r\nimport React, { useEffect } from \"react\";\r\nimport { ThreeDots } from \"react-loader-spinner\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { GetStudents } from \"../../actions/StudentAction\";\r\nimport { useAppDispatch, useAppSelector } from \"../../redux/hooks/hooks\";\r\nimport { studentsFetch } from \"../../redux/StudentsSlice\";\r\nimport StudentSearchBar from \"./StudentSearchBar\";\r\nimport StudentItem from \"./StudentItem\";\r\nimport StudentPagination from \"./StudentPagination\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { StudentKey } from \"../../ultils/keys\";\r\nimport { StudentsLoading } from \"./StudentsLoading\";\r\n\r\nconst StudentsList = () => {\r\n  const { data: students, isLoading } = useQuery([StudentKey], () =>\r\n    GetStudents()\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className='row'>\r\n        <div className='col-lg-12'>\r\n          <div className='card'>\r\n            <div className='card-body'>\r\n              <div className='row justify-content-between mb-2'>\r\n                {/* {student.total> 0 && <EmployeeSearchBar />} */}\r\n                <StudentSearchBar />\r\n                <div className='col-sm-6'>\r\n                  <div className=' text-sm-end'>\r\n                    <Link to='/dashbord/add-students'>\r\n                      <button\r\n                        type='button'\r\n                        className='btn btn-primary'\r\n                        data-bs-target='#custom-modal'\r\n                      >\r\n                        <i className='fa fa-plus'></i> Ajouter etudiant\r\n                      </button>\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n                {/* end col*/}\r\n              </div>\r\n              <div className='table-responsive'>\r\n                {students && students.meta.total} etudiants\r\n                <table className='table table-centered table-nowrap table-hover mb-0'>\r\n                  {students && students.data.length > 0 && (\r\n                    <thead>\r\n                      <tr>\r\n                        <th>Nom</th>\r\n                        <th>Prenom</th>\r\n                        <th>Telephone</th>\r\n                        <th>Email</th>\r\n                        <th> Date de naissance</th>\r\n                        <th style={{ width: 82 }}>Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                  )}\r\n\r\n                  <tbody>\r\n                    {isLoading ? (\r\n                      <StudentsLoading />\r\n                    ) : (\r\n                      <>\r\n                        {students.data.map((student: any) => (\r\n                          <StudentItem students={student} key={student.id} />\r\n                        ))}\r\n                      </>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n                {/* if the employees is empty */}\r\n                {students && students.data.length === 0 && (\r\n                  <div className='row'>\r\n                    {\" \"}\r\n                    <Empty />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {students && students.data.length > 0 && (\r\n                <StudentPagination\r\n                  meta={students.meta}\r\n                  total={students.meta.total}\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StudentsList;\r\n","import StudentsList from \"../../components/students/StudentsList\";\r\nimport { AppTitle } from \"../../components/partials/AppTitle\";\r\nexport const Students = () => {\r\n  return (\r\n    <>\r\n      <AppTitle title={\"Ajouter etudiant\"} img='students' />\r\n      <StudentsList />\r\n    </>\r\n  );\r\n};\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport type { TypedUseSelectorHook } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"../store\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch: () => AppDispatch = useDispatch;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n"],"names":["className","htmlFor","type","id","placeholder","deleteField","name","axios","data","console","log","status","message","response","modalName","title","text","deleteButton","tabIndex","role","style","marginTop","display","fontWeight","useState","loading","setLoading","dismisModal","setDismisModal","dispatch","useAppDispatch","deleteStudent","toast","studentDelete","boutton","disabled","onClick","BottomText","color","fontSize","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","students","person","nom","prenom","telephone","email","date_naissance","to","uuid","props","onChange","pageNumber","meta","CurrentPage","lastPaginate","total","float","defaultCurrent","pageSize","showSizeChanger","itemRender","_","originalElement","cursor","useQuery","StudentKey","GetStudents","isLoading","length","width","StudentsLoading","map","student","Students","AppTitle","img","useDispatch","useAppSelector","useSelector"],"sourceRoot":""}