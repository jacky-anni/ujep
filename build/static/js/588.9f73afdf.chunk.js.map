{"version":3,"file":"static/js/588.9f73afdf.chunk.js","mappings":"0OAQA,EAPoBA,EAAAA,KAAaC,MAAM,CAErCC,SAAUF,EAAAA,KAAaG,SAAS,8BAEhCC,SAAUJ,EAAAA,KAAaG,SAAS,gC,qECqGlC,EA5FkB,WAAO,IAAD,QAChBE,GAAWC,EAAAA,EAAAA,MAGjB,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYC,KALtBC,EAAQ,EAARA,SACAC,EAAY,EAAZA,aACAC,EAAK,EAALA,MACaC,EAAM,EAAnBC,UAAaD,OAMTE,GAAcC,EAAAA,EAAAA,MAGpB,GAA8CC,EAAAA,EAAAA,GAAW,yCACvD,WAAOC,GAAM,6FACYC,EAAAA,EAAAA,IAAMD,GAAQ,KAAD,EAAtB,OAARE,EAAQ,yBACPA,GAAQ,2CAChB,mDAJsD,GAKvD,CACEC,UAAW,SAACC,GAOV,OANAC,aAAaC,QAAQ,SAAUF,EAAOG,cACtCC,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,UAAYJ,EAAOG,aACrBV,EAAYY,kBAAkB,CAACC,EAAAA,MAC/BC,EAAAA,EAAAA,GAAM,UAAW,gCACjBjB,IACOR,EAAS,YAClB,EACA0B,QAAS,WACPlB,GACF,IAjBImB,EAAS,EAATA,UAAWC,EAAM,EAANA,OAAeC,GAAF,EAALC,MAAc,EAAPD,SA4BlC,OACE,+BACE,kBAAME,SAAUxB,GANH,SAACyB,GAChBJ,EAAOI,EACT,IAI2C,UACpCH,IACC,SAACI,EAAA,EAAK,CAACC,QAAQ,SAASC,SAAS,QAAQC,UAAU,OAAM,8CAM3D,iBAAKA,UAAU,MAAK,WAClB,iBAAKA,UAAU,mCAAkC,WAC/C,kDACA,oCACM9B,EAAS,aAAW,IACxB8B,UAAU,gBACVC,YAAY,aAGd,iBAAMD,UAAU,eAAc,SACZ,QADY,EAC3B3B,EAAOZ,gBAAQ,OAAS,QAAT,EAAf,EAAiByC,eAAO,WAAT,EAAf,EAA0BC,iBAI/B,iBAAKH,UAAU,mCAAkC,WAC/C,6CACA,oCACM9B,EAAS,aAAW,IACxBkC,KAAK,WACLJ,UAAU,gBACVC,YAAY,yBAGd,iBAAMD,UAAU,eAAc,SACZ,QADY,EAC3B3B,EAAOV,gBAAQ,OAAS,QAAT,EAAf,EAAiBuC,eAAO,WAAT,EAAf,EAA0BC,oBAKjC,gBAAKH,UAAU,qBAAoB,UACjC,SAACK,EAAA,EAAY,CAACH,QAAS,YAAaI,QAASf,UAKvD,ECtGagB,EAAQ,WACnB,OACE,0BACE,+BACE,SAAC,EAAS,OAIlB,C","sources":["shemaForms/account/LoginSchema.ts","components/account/LoginForm.tsx","pages/Login.tsx"],"sourcesContent":["import * as yup from \"yup\";\r\nconst LoginSchema = yup.object().shape({\r\n  //chek username\r\n  username: yup.string().required(\"Ce champ est obligatoire !\"),\r\n  // check password\r\n  password: yup.string().required(\"Ce champ est obligatoire !\"),\r\n});\r\n\r\nexport default LoginSchema;\r\n","import { Field, Form, Formik } from \"formik\";\r\nimport { useEffect, useState } from \"react\";\r\nimport SubmitButtom from \"../Ui/form/SubmitButtom\";\r\nimport { login } from \"../../actions/UserAction\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Alert } from \"@mui/material\";\r\nimport LoginSchema from \"../../shemaForms/account/LoginSchema\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { UserKey } from \"../../ultils/keys\";\r\nimport { Toast } from \"../layout/Toast\";\r\n\r\nconst LoginForm = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // shema validation for login login user\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(LoginSchema),\r\n  });\r\n\r\n  // initialize query client\r\n  const queryClient = useQueryClient();\r\n\r\n  // mutation\r\n  const { isLoading, mutate, error, isError } = useMutation(\r\n    async (values) => {\r\n      const response = await login(values);\r\n      return response;\r\n    },\r\n    {\r\n      onSuccess: (result) => {\r\n        localStorage.setItem(\"wpwuab\", result.access_token);\r\n        axios.defaults.headers.common[\"Authorization\"] =\r\n          \"Bearer \" + result.access_token;\r\n        queryClient.invalidateQueries([UserKey]);\r\n        Toast(\"success\", \"Vous êtes connecté (e)\");\r\n        reset();\r\n        return navigate(\"/dashbord\");\r\n      },\r\n      onError: () => {\r\n        reset();\r\n      },\r\n    }\r\n  );\r\n\r\n  // define error\r\n  const err: any = error;\r\n\r\n  const onSubmit = (data: any) => {\r\n    mutate(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {isError && (\r\n          <Alert variant='filled' severity='error' className='mb-3'>\r\n            {/* {err.response.data.message} */}\r\n            Email ou mot de passe incorrect\r\n          </Alert>\r\n        )}\r\n\r\n        <div className='row'>\r\n          <div className='col-md-12 position-relative mb-2'>\r\n            <label>Nom d'utilisateur</label>\r\n            <input\r\n              {...register(\"username\")}\r\n              className='form-control '\r\n              placeholder='@jacky'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.username?.message?.toString()}\r\n            </span>\r\n          </div>\r\n\r\n          <div className='col-md-12 position-relative mb-2'>\r\n            <label>Mot de passe</label>\r\n            <input\r\n              {...register(\"password\")}\r\n              type='password'\r\n              className='form-control '\r\n              placeholder='Votre mot de passe'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.password?.message?.toString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='text-center d-grid'>\r\n          <SubmitButtom message={\"Soumettre\"} loading={isLoading} />\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import LoginForm from \"../components/account/LoginForm\";\r\n\r\nexport const Login = () => {\r\n  return (\r\n    <div>\r\n      <>\r\n        <LoginForm />\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n"],"names":["yup","shape","username","required","password","navigate","useNavigate","useForm","resolver","yupResolver","LoginSchema","register","handleSubmit","reset","errors","formState","queryClient","useQueryClient","useMutation","values","login","response","onSuccess","result","localStorage","setItem","access_token","axios","invalidateQueries","UserKey","Toast","onError","isLoading","mutate","isError","error","onSubmit","data","Alert","variant","severity","className","placeholder","message","toString","type","SubmitButtom","loading","Login"],"sourceRoot":""}