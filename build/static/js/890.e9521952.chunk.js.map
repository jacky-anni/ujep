{"version":3,"file":"static/js/890.e9521952.chunk.js","mappings":"4OAgBaA,EAAe,WAAuB,IAAtBC,EAAY,uDAAG,EAC1C,OAAOC,EAAAA,EAAAA,IAAU,mBAAD,OAAoBD,IAAQE,MAAK,SAACC,GAAG,OAAKA,EAAIC,IAAI,GACpE,EAGaC,EAAW,yCAAG,WAAOD,GAAc,+FACvCH,EAAAA,EAAAA,KAAW,YAAaG,GAAMF,MAAK,SAACC,GAAG,OAAKA,EAAIC,IAAI,KAAC,2CAC7D,gBAFuB,sCAKXE,EAAY,yCAAG,WAAOC,EAAYH,GAAc,+FACpDH,EAAAA,EAAAA,MAAY,cAAD,OAAeM,GAAMH,GAAMF,MAAK,SAACC,GAAG,OAAKA,EAAIC,IAAI,KAAC,2CACrE,gBAFwB,wCAKZI,EAAY,yCAAG,WAAOD,GAAO,+FACjCN,EAAAA,EAAAA,IAAU,cAAD,OAAeM,IAAML,MAAK,SAACC,GAAG,OAAKA,EAAIC,IAAI,KAAC,2CAC7D,gBAFwB,qC,qFC7BZK,EAAkB,WAC7B,OACE,+BACE,+BACE,SAAC,KAAS,CACRC,OAAO,KACPC,MAAM,KACNC,OAAO,IACPC,MAAM,UACNC,UAAU,qBACVC,aAAc,CAAEC,QAAS,SACzBC,SAAS,KAEX,cAAGC,MAAO,CAAEC,UAAW,SAAU,uCAIzC,C,6PCHaC,EAAmB,SAAH,GAA2B,IAAD,oCAApBC,EAAQ,EAARA,SACjC,GAKIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYC,EAAAA,GACtBC,cAAe,CACbC,IAAa,OAARN,QAAQ,IAARA,OAAQ,EAARA,EAAUO,OAAOD,IACtBE,OAAgB,OAARR,QAAQ,IAARA,OAAQ,EAARA,EAAUO,OAAOC,OACzBC,KAAc,OAART,QAAQ,IAARA,OAAQ,EAARA,EAAUO,OAAOE,KACvBC,MAAe,OAARV,QAAQ,IAARA,OAAQ,EAARA,EAAUO,OAAOG,MACxBC,UAAmB,OAARX,QAAQ,IAARA,OAAQ,EAARA,EAAUO,OAAOK,eAC5BC,SAAkB,OAARb,QAAQ,IAARA,OAAQ,EAARA,EAAUa,SACpBD,eAAwB,OAARZ,QAAQ,IAARA,OAAQ,EAARA,EAAUO,OAAOK,eACjCE,cAAuB,OAARd,QAAQ,IAARA,OAAQ,EAARA,EAAUc,cACzBC,QAAiB,OAARf,QAAQ,IAARA,OAAQ,EAARA,EAAUe,WAfrBC,EAAQ,EAARA,SACAC,EAAY,EAAZA,aAEaC,GADR,EAALC,MACmB,EAAnBC,UAAaF,QAiBTG,GAAcC,EAAAA,EAAAA,MAKZvC,IAHSwC,EAAAA,EAAAA,OAGAC,EAAAA,EAAAA,GAAS,CAACC,EAAAA,KAAc,kBAAM/C,EAAAA,EAAAA,KAAc,IAArDK,MAGR,GAAyD2C,EAAAA,EAAAA,GAAW,yCAClE,WAAOC,GAAW,uFACV1C,EAAAA,EAAAA,IAAae,EAASO,OAAOqB,KAAMD,GAAQ,KAAD,sCACjD,mDAHiE,GAIlE,CACEE,SAAU,SAACC,GACT,OAAOT,EAAYU,aACjB,CAACN,EAAAA,KACD,kBACE1C,GACAA,EAAKA,KAAKiD,KAAI,SAAChC,GAAa,OAC1BA,EAASd,KAAOc,EAASd,GAAK4C,EAAS9B,CAAQ,GAChD,GAEP,EACAiC,UAAW,SAACH,EAAQI,EAAWC,IAC7BC,EAAAA,EAAAA,GAAM,UAAW,2CACjBf,EAAYgB,kBAAkB,CAACZ,EAAAA,IAEjC,IAnBIa,EAAS,EAATA,UAAWC,EAAM,EAANA,OAAQC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAwB5BC,GAxB8C,EAATC,UAwB1BH,GAEjBI,QAAQC,IAAIH,GAOZ,OACE,+BACE,kBAAMI,SAAU7B,GANH,SAAClC,GAChBwD,EAAOxD,EACT,IAI2C,UACpC0D,IACC,SAACM,EAAA,EAAK,CAACC,QAAQ,SAASC,SAAS,QAAQC,UAAU,OAAM,SACrDR,GAAOA,EAAIS,SAASpE,KAAKqE,SACzB,mCAGN,iBAAKF,UAAU,MAAK,WAClB,iBAAKA,UAAU,kCAAiC,WAC9C,8CACA,kCACEA,UAAU,iBACNlC,EAAS,QAAM,IACnBqC,YAAY,YAGd,iBAAMH,UAAU,eAAc,SACjB,QADiB,EAC3BhC,EAAOZ,WAAG,OAAS,QAAT,EAAV,EAAY8C,eAAO,WAAT,EAAV,EAAqBE,iBAI1B,iBAAKJ,UAAU,kCAAiC,WAC9C,iDACA,kCACEA,UAAU,iBACNlC,EAAS,WAAS,IACtBqC,YAAY,eAGd,iBAAMH,UAAU,eAAc,SACd,QADc,EAC3BhC,EAAOV,cAAM,OAAS,QAAT,EAAb,EAAe4C,eAAO,WAAT,EAAb,EAAwBE,oBAI/B,iBAAKJ,UAAU,MAAK,WAClB,iBAAKA,UAAU,kCAAiC,WAC9C,+CACA,oCAAQA,UAAU,gBAAmBlC,EAAS,SAAO,eACnD,mBAAQuC,MAAM,GAAE,iCAChB,mBAAQA,MAAO,WAAW,uBAC1B,mBAAQA,MAAO,UAAU,0BAG3B,iBAAML,UAAU,eAAc,SAChB,QADgB,EAC3BhC,EAAOT,YAAI,OAAS,QAAT,EAAX,EAAa2C,eAAO,WAAT,EAAX,EAAsBE,iBAI3B,iBAAKJ,UAAU,kCAAiC,WAC9C,+CACA,kCACEA,UAAU,iBACNlC,EAAS,UAAQ,IACrBqC,YAAY,8BAGd,iBAAMH,UAAU,eAAc,SACf,QADe,EAC3BhC,EAAOR,aAAK,OAAS,QAAT,EAAZ,EAAc0C,eAAO,WAAT,EAAZ,EAAuBE,oBAI9B,iBAAKJ,UAAU,MAAK,WAClB,iBAAKA,UAAU,kCAAiC,WAC9C,oDACA,kCACEA,UAAU,gBACNlC,EAAS,cAAY,IACzBqC,YAAY,sBAGd,iBAAMH,UAAU,eAAc,SACX,QADW,EAC3BhC,EAAOP,iBAAS,OAAS,QAAT,EAAhB,EAAkByC,eAAO,WAAT,EAAhB,EAA2BE,iBAIhC,iBAAKJ,UAAU,kCAAiC,WAC9C,4DACA,kCACEA,UAAU,iBACNlC,EAAS,mBAAiB,IAC9BqC,YAAY,GACZG,KAAK,WAGP,iBAAMN,UAAU,eAAc,SACN,QADM,EAC3BhC,EAAON,sBAAc,OAAS,QAAT,EAArB,EAAuBwC,eAAO,WAAT,EAArB,EAAgCE,oBAIvC,iBAAKJ,UAAU,MAAK,WAClB,iBAAKA,UAAU,kCAAiC,WAC9C,mDACA,kCACEA,UAAU,iBACNlC,EAAS,aAAW,IACxBqC,YAAY,iBAGd,iBAAMH,UAAU,eAAc,SACZ,QADY,EAC3BhC,EAAOL,gBAAQ,OAAS,QAAT,EAAf,EAAiBuC,eAAO,WAAT,EAAf,EAA0BE,iBAI/B,iBAAKJ,UAAU,kCAAiC,WAC9C,0DACA,kCACEA,UAAU,iBACNlC,EAAS,kBAAgB,IAC7BwC,KAAK,OACLH,YAAY,OAGd,iBAAMH,UAAU,eAAc,SACP,QADO,EAC3BhC,EAAOJ,qBAAa,OAAS,QAAT,EAApB,EAAsBsC,eAAO,WAAT,EAApB,EAA+BE,oBAItC,gBAAKJ,UAAU,MAAK,UAClB,iBAAKA,UAAU,mCAAkC,WAC/C,kDACA,kCACEA,UAAU,gBACNlC,EAAS,YAAU,IACvBqC,YAAY,UAGd,iBAAMH,UAAU,eAAc,SACb,QADa,EAC3BhC,EAAOH,eAAO,OAAS,QAAT,EAAd,EAAgBqC,eAAO,WAAT,EAAd,EAAyBE,mBAIhC,SAACG,EAAA,EAAY,CAACL,QAAS,YAAaM,QAASpB,QAIrD,E,oBCtMaqB,EAA4B,WACvC,IAAQzE,GAAO0E,EAAAA,EAAAA,MAAP1E,GACR,GAA4CsC,EAAAA,EAAAA,GAC1C,CAACC,EAAAA,GAAavC,IACd,kBAAMC,EAAAA,EAAAA,IAAaD,EAAG,GACtB,CACE2E,UAAW,IAJP9E,EAAI,EAAJA,KAAMuD,EAAS,EAATA,UAAWG,EAAO,EAAPA,QAQnBC,EARiC,EAALF,MASlC,OACE,iCACE,SAACsB,EAAA,EAAQ,CAACC,MAAO,2BACjB,gBAAKb,UAAU,MAAK,UAClB,gBAAKA,UAAU,YAAW,UACxB,gBAAKA,UAAU,OAAM,UACnB,gBAAKA,UAAU,YAAW,SACvBZ,GACC,SAAClD,EAAA,EAAe,IACdqD,GACF,SAACuB,EAAA,EAAgB,CAACZ,QAASV,EAAIS,SAASpE,KAAKqE,WAE7C,SAACrD,EAAgB,CAACC,SAAUjB,cAQ5C,C,qCChDMqB,EAAwB6D,EAAAA,KAAaC,MAAM,CAC/C5D,IAAK2D,EAAAA,KAAaE,SAAS,8BAC3B3D,OAAQyD,EAAAA,KAAaE,SAAS,8BAC9B1D,KAAMwD,EAAAA,KAAaE,SAAS,8BAC5BzD,MAAOuD,EAAAA,KAEJvD,MAAM,wBACNyD,SAAS,8BACZxD,UAAWsD,EAAAA,KAAaE,SAAS,8BACjCvD,eAAgBqD,EAAAA,KAEbE,SAAS,gCACTC,UAAU,+BACbvD,SAAUoD,EAAAA,KAAaE,SAAS,8BAChCrD,cAAemD,EAAAA,KAEZE,SAAS,iCACTC,UAAU,+BACbrD,QAASkD,EAAAA,KAENI,IAAI,EAAG,gDACPD,UAAU,uCAGf,K","sources":["actions/EmployeesAction.ts","components/employee/EmployeeLoading.tsx","components/employee/EditEmployeeForm.tsx","pages/employees/EditEmpoyee.tsx","shemaForms/employees/AddEditEmplyeesSchema.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// interface dat\r\ninterface Employee {\r\n  nom: string;\r\n  prenom: string;\r\n  sexe: string;\r\n  email: string;\r\n  telephone: string;\r\n  date_naissance: string;\r\n  fonction: string;\r\n  date_embauche: string;\r\n  salaire: string;\r\n}\r\n\r\n// showl all employees\r\nexport const GetEmployees = (page: number = 1) => {\r\n  return axios.get(`/employees?page=${page}`).then((res) => res.data);\r\n};\r\n\r\n// add employee\r\nexport const addEmployee = async (data: Employee) => {\r\n  return axios.post(\"employees\", data).then((res) => res.data);\r\n};\r\n\r\n// add employee\r\nexport const editEmployee = async (id: string, data: Employee) => {\r\n  return axios.patch(`/employees/${id}`, data).then((res) => res.data);\r\n};\r\n\r\n// get employee\r\nexport const showEmployee = async (id: any) => {\r\n  return axios.get(`/employees/${id}`).then((res) => res.data);\r\n};\r\n","import React from \"react\";\r\nimport { ThreeDots } from \"react-loader-spinner\";\r\nexport const EmployeeLoading = () => {\r\n  return (\r\n    <>\r\n      <center>\r\n        <ThreeDots\r\n          height='90'\r\n          width='90'\r\n          radius='9'\r\n          color='#7d56c2'\r\n          ariaLabel='three-dots-loading'\r\n          wrapperStyle={{ display: \"block\" }}\r\n          visible={true}\r\n        />\r\n        <p style={{ marginTop: \"-30px\" }}>Chargment en cours...</p>\r\n      </center>\r\n    </>\r\n  );\r\n};\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  addEmployee,\r\n  editEmployee,\r\n  GetEmployees,\r\n} from \"../../actions/EmployeesAction\";\r\nimport AddEditEmplyeesSchema from \"../../shemaForms/employees/AddEditEmplyeesSchema\";\r\nimport { EmployeeKey } from \"../../ultils/keys\";\r\nimport { Toast } from \"../layout/Toast\";\r\nimport SubmitButtom from \"../Ui/form/SubmitButtom\";\r\n\r\nexport const EditEmployeeForm = ({ employee }: any) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(AddEditEmplyeesSchema),\r\n    defaultValues: {\r\n      nom: employee?.person.nom,\r\n      prenom: employee?.person.prenom,\r\n      sexe: employee?.person.sexe,\r\n      email: employee?.person.email,\r\n      telephone: employee?.person.date_naissance,\r\n      fonction: employee?.fonction,\r\n      date_naissance: employee?.person.date_naissance,\r\n      date_embauche: employee?.date_embauche,\r\n      salaire: employee?.salaire,\r\n    },\r\n  });\r\n\r\n  // initialize query client\r\n  const queryClient = useQueryClient();\r\n  // create navigate\r\n  const navigate = useNavigate();\r\n\r\n  // select data\r\n  const { data } = useQuery([EmployeeKey], () => GetEmployees());\r\n\r\n  // create mutation\r\n  const { isLoading, mutate, error, isError, isSuccess } = useMutation(\r\n    async (values: any) => {\r\n      await editEmployee(employee.person.uuid, values);\r\n    },\r\n    {\r\n      onMutate: (result) => {\r\n        return queryClient.setQueryData(\r\n          [EmployeeKey],\r\n          () =>\r\n            data &&\r\n            data.data.map((employee: any) =>\r\n              employee.id === employee.id ? result : employee\r\n            )\r\n        );\r\n      },\r\n      onSuccess: (result, variables, context) => {\r\n        Toast(\"success\", \"Faculté enregistré avec succès\");\r\n        queryClient.invalidateQueries([EmployeeKey]);\r\n        //navigate(`/dashbord/faculty/${faculty.id}`);\r\n      },\r\n    }\r\n  );\r\n\r\n  // define error\r\n  const err: any = error;\r\n\r\n  console.log(err);\r\n\r\n  // submit form\r\n  const onSubmit = (data: any) => {\r\n    mutate(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {isError && (\r\n          <Alert variant='filled' severity='error' className='mb-3'>\r\n            {(err && err.response.data.message) ||\r\n              \"Probleme avec la modification\"}\r\n          </Alert>\r\n        )}\r\n        <div className='row'>\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer le nom</label>\r\n            <input\r\n              className='form-control '\r\n              {...register(\"nom\")}\r\n              placeholder='Jacky'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.nom?.message?.toString()}\r\n            </span>\r\n          </div>\r\n\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer le prenom</label>\r\n            <input\r\n              className='form-control '\r\n              {...register(\"prenom\")}\r\n              placeholder='Anizaire'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.prenom?.message?.toString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer le sexe</label>\r\n            <select className='form-control' {...register(\"sexe\")}>\r\n              <option value=''>Choisir une option</option>\r\n              <option value={\"masculin\"}>Masculin</option>\r\n              <option value={\"feminin\"}>Feminin</option>\r\n            </select>\r\n\r\n            <span className='errors-field'>\r\n              {errors.sexe?.message?.toString()}\r\n            </span>\r\n          </div>\r\n\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer l'email</label>\r\n            <input\r\n              className='form-control '\r\n              {...register(\"email\")}\r\n              placeholder='anizairejacky@gmail.com'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.email?.message?.toString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer le telephone</label>\r\n            <input\r\n              className='form-control'\r\n              {...register(\"telephone\")}\r\n              placeholder='+509 3454 34 32'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.telephone?.message?.toString()}\r\n            </span>\r\n          </div>\r\n\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer la date de naissance</label>\r\n            <input\r\n              className='form-control '\r\n              {...register(\"date_naissance\")}\r\n              placeholder=''\r\n              type='date'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.date_naissance?.message?.toString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer la fonction</label>\r\n            <input\r\n              className='form-control '\r\n              {...register(\"fonction\")}\r\n              placeholder='Secretaire'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.fonction?.message?.toString()}\r\n            </span>\r\n          </div>\r\n\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer la date d'embauche</label>\r\n            <input\r\n              className='form-control '\r\n              {...register(\"date_embauche\")}\r\n              type='date'\r\n              placeholder=''\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.date_embauche?.message?.toString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-md-12 position-relative mb-2'>\r\n            <label>Entrer le salaire</label>\r\n            <input\r\n              className='form-control'\r\n              {...register(\"salaire\")}\r\n              placeholder='200'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.salaire?.message?.toString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <SubmitButtom message={\"Soumettre\"} loading={isLoading} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Field, Formik } from \"formik\";\r\nimport { AppTitle } from \"../../components/partials/AppTitle\";\r\nimport SubmitButtom from \"../../components/Ui/form/SubmitButtom\";\r\nimport {\r\n  addEmployee,\r\n  editEmployee,\r\n  showEmployee,\r\n} from \"../../actions/EmployeesAction\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { EditEmployeeForm } from \"../../components/employee/EditEmployeeForm\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { EmployeeKey } from \"../../ultils/keys\";\r\nimport { NotFoundTemplate } from \"../../components/layout/NotFoundTemplate\";\r\nimport { EmployeeLoading } from \"../../components/employee/EmployeeLoading\";\r\n\r\nexport const EditEmpoyee: React.FC<{}> = () => {\r\n  const { id } = useParams();\r\n  const { data, isLoading, isError, error } = useQuery(\r\n    [EmployeeKey, id],\r\n    () => showEmployee(id),\r\n    {\r\n      cacheTime: 0,\r\n    }\r\n  );\r\n\r\n  const err: any = error;\r\n  return (\r\n    <>\r\n      <AppTitle title={\"Modifier cet employee\"} />\r\n      <div className='row'>\r\n        <div className='col-lg-12'>\r\n          <div className='card'>\r\n            <div className='card-body'>\r\n              {isLoading ? (\r\n                <EmployeeLoading />\r\n              ) : isError ? (\r\n                <NotFoundTemplate message={err.response.data.message} />\r\n              ) : (\r\n                <EditEmployeeForm employee={data} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import * as yup from \"yup\";\r\nconst AddEditEmplyeesSchema = yup.object().shape({\r\n  nom: yup.string().required(\"Ce champ est obligatoire !\"),\r\n  prenom: yup.string().required(\"Ce champ est obligatoire !\"),\r\n  sexe: yup.string().required(\"Ce champ est obligatoire !\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"L'email est invalide\")\r\n    .required(\"Ce champ est obligatoire !\"),\r\n  telephone: yup.string().required(\"Ce champ est obligatoire !\"),\r\n  date_naissance: yup\r\n    .date()\r\n    .required(\"Cette date n'est pas valide!\")\r\n    .typeError(\"Cette date n'est pas valide\"),\r\n  fonction: yup.string().required(\"Ce champ est obligatoire !\"),\r\n  date_embauche: yup\r\n    .date()\r\n    .required(\"Cette date n'est pas valide !\")\r\n    .typeError(\"Cette date n'est pas valide\"),\r\n  salaire: yup\r\n    .number()\r\n    .min(0, \"La note ne doit pas être inferieur à 0\")\r\n    .typeError(\"vous devez spécifier un nombre\"),\r\n});\r\n\r\nexport default AddEditEmplyeesSchema;\r\n"],"names":["GetEmployees","page","axios","then","res","data","addEmployee","editEmployee","id","showEmployee","EmployeeLoading","height","width","radius","color","ariaLabel","wrapperStyle","display","visible","style","marginTop","EditEmployeeForm","employee","useForm","resolver","yupResolver","AddEditEmplyeesSchema","defaultValues","nom","person","prenom","sexe","email","telephone","date_naissance","fonction","date_embauche","salaire","register","handleSubmit","errors","reset","formState","queryClient","useQueryClient","useNavigate","useQuery","EmployeeKey","useMutation","values","uuid","onMutate","result","setQueryData","map","onSuccess","variables","context","Toast","invalidateQueries","isLoading","mutate","error","isError","err","isSuccess","console","log","onSubmit","Alert","variant","severity","className","response","message","placeholder","toString","value","type","SubmitButtom","loading","EditEmpoyee","useParams","cacheTime","AppTitle","title","NotFoundTemplate","yup","shape","required","typeError","min"],"sourceRoot":""}