{"version":3,"file":"static/js/938.eb7659da.chunk.js","mappings":"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","sources":["components/users/UsersLoading.tsx","components/users/Header.tsx","../node_modules/@ant-design/icons-svg/es/asn/UserOutlined.js","../node_modules/@ant-design/icons/es/icons/UserOutlined.js","components/users/DeleteUser.tsx","components/users/UserListItem.tsx","components/users/UserList.tsx","pages/users/Users.tsx","redux/hooks/hooks.ts"],"sourcesContent":["import React from \"react\";\r\nimport { ThreeDots } from \"react-loader-spinner\";\r\n\r\nexport const UsersLoading = () => {\r\n  return (\r\n    <>\r\n      <center>\r\n        <ThreeDots\r\n          height='90'\r\n          width='90'\r\n          radius='9'\r\n          color='#7d56c2'\r\n          ariaLabel='three-dots-loading'\r\n          wrapperStyle={{ display: \"block\" }}\r\n          visible={true}\r\n        />\r\n        <p style={{ marginTop: \"-30px\" }}>Chargment en cours...</p>\r\n      </center>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n  return (\r\n    <>\r\n      <div className='row justify-content-between mb-2 p-2'>\r\n        {/* {student.total> 0 && <EmployeeSearchBar />} */}\r\n        <div className='col-md-6 col-sm-12 '></div>\r\n\r\n        <div className='col-6 text-sm-end'>\r\n          <Link to='/dashbord/add-users'>\r\n            <button className='btn btn-primary'>Ajouter Utilisateurs</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","// This icon file is generated automatically.\nvar UserOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" } }] }, \"name\": \"user\", \"theme\": \"outlined\" };\nexport default UserOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UserOutlinedSvg from \"@ant-design/icons-svg/es/asn/UserOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar UserOutlined = function UserOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UserOutlinedSvg\n  }));\n};\nUserOutlined.displayName = 'UserOutlined';\nexport default /*#__PURE__*/React.forwardRef(UserOutlined);","import { CloseCircleFilled } from \"@ant-design/icons\";\r\nimport { ExclamationCircleFilled } from \"@ant-design/icons\";\r\nimport { Modal } from \"antd\";\r\nimport { useState } from \"react\";\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport { deleteUser_ } from \"../../actions/UserAction\";\r\nimport { useAppDispatch } from \"../../redux/hooks/hooks\";\r\nimport { deleteUser } from \"../../redux/UserSlice\";\r\nimport { Toast } from \"./../layout/Toast\";\r\n\r\nexport const DeleteUser = ({ user }: any) => {\r\n  const dispatch = useAppDispatch();\r\n  const { confirm } = Modal;\r\n  const showDeleteConfirm = () => {\r\n    confirm({\r\n      title: \"Voulez-vous vraiment supprimer\",\r\n      icon: <ExclamationCircleFilled />,\r\n      content: user.person.prenom + \"  \" + user.person.nom,\r\n      okText: \"Wi\",\r\n      okType: \"primary\",\r\n      cancelText: \"Non\",\r\n      async onOk() {\r\n        const data = await deleteUser_(user.person.uuid);\r\n\r\n        if (data && data.status) {\r\n          Toast(\"error\", data.message);\r\n        } else {\r\n          Toast(\"error\", \"Voulez-vous vraiment supprimer\");\r\n\r\n          dispatch(deleteUser(data));\r\n        }\r\n      },\r\n      onCancel() {\r\n        console.log(\"Cancel\");\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      <span className='btn btn-danger btn-xs' onClick={showDeleteConfirm}>\r\n        <b>\r\n          {\" \"}\r\n          <CloseCircleFilled />\r\n        </b>\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n","import { Avatar } from \"antd\";\r\nimport React from \"react\";\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\nimport { DeleteUser } from \"./DeleteUser\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const UserListItem = ({ users }: any) => {\r\n  return (\r\n    <>\r\n      <tr>\r\n        <td style={{ width: 36 }}>\r\n          <Avatar size={40} icon={<UserOutlined />} />\r\n        </td>\r\n        <td>\r\n          <h5 className='m-0 fw-normal font-13'>\r\n            {users.person.prenom} {users.person.nom}\r\n          </h5>\r\n          <p className='mb-0 text-muted'>\r\n            <small\r\n              className={`badge badge-soft-${\r\n                users.isActive ? \"success\" : \"danger\"\r\n              }`}\r\n            >\r\n              {users.isActive ? \"Activer\" : \"Desactiver\"}\r\n            </small>\r\n          </p>\r\n        </td>\r\n        <td>\r\n          {users.person.email} / {users.username}\r\n        </td>\r\n        <td>{users.role.role_name}</td>\r\n        <td>\r\n          <a href='javascript: void(0);' className='btn btn-xs btn-light m-1'>\r\n            <i className='fa fa-user' />\r\n          </a>\r\n\r\n          <Link to={`/dashbord/edit-users/${users.person.uuid}`}>\r\n            <button className='btn btn-xs btn-info m-1'>\r\n              <i className='fa fa-edit' />\r\n            </button>\r\n          </Link>\r\n\r\n          <DeleteUser user={users} />\r\n        </td>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n","import { Empty } from \"antd\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { UserKey } from \"../../ultils/keys\";\r\nimport { getUsers } from \"../../actions/UserAction\";\r\nimport { Header } from \"./Header\";\r\nimport { UserListItem } from \"./UserListItem\";\r\nimport { UsersLoading } from \"./UsersLoading\";\r\n\r\nexport const UserList = () => {\r\n  const { data: users, isLoading } = useQuery([UserKey], () => getUsers());\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className='table-responsive'>\r\n        <table className='table table-nowrap table-centered m-0'>\r\n          {users && users.data.length > 0 && (\r\n            <thead className='table-light'>\r\n              <tr>\r\n                <th colSpan={2}>Profile</th>\r\n                <th>Email</th>\r\n                <th>Role</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n          )}\r\n\r\n          <tbody>\r\n            {users &&\r\n              users.data.length > 0 &&\r\n              users.data.map((users: any) => (\r\n                <UserListItem key={users.id} users={users} />\r\n              ))}\r\n          </tbody>\r\n        </table>\r\n\r\n        {isLoading && (\r\n          <>\r\n            <UsersLoading />\r\n          </>\r\n        )}\r\n        {/* if the employees is empty */}\r\n        {users && users.data.length === 0 && (\r\n          <p className='mt-3 mb-0'>\r\n            <Empty description={\"Pas de données pour l'instant\"} />\r\n          </p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { UserList } from \"./../../components/users/UserList\";\r\nimport { AppTitle } from \"./../../components/partials/AppTitle\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Users = () => {\r\n  return (\r\n    <>\r\n      <div className='row'>\r\n        <AppTitle title={\"Utilisateurs\"} img={\"users\"} />\r\n        <div className='card'>\r\n          <div className='row justify-content-between mb-2'>\r\n            <UserList />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import { useDispatch, useSelector } from \"react-redux\";\r\nimport type { TypedUseSelectorHook } from \"react-redux\";\r\nimport type { RootState, AppDispatch } from \"../store\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\nexport const useAppDispatch: () => AppDispatch = useDispatch;\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n"],"names":["UsersLoading","height","width","radius","color","ariaLabel","wrapperStyle","display","visible","style","marginTop","Header","className","to","UserOutlined","props","ref","React","AntdIcon","_objectSpread","icon","UserOutlinedSvg","displayName","DeleteUser","user","dispatch","useAppDispatch","confirm","Modal","onClick","title","ExclamationCircleFilled","content","person","prenom","nom","okText","okType","cancelText","onOk","deleteUser_","uuid","data","status","Toast","message","deleteUser","onCancel","console","log","CloseCircleFilled","UserListItem","users","size","isActive","email","username","role","role_name","href","UserList","useQuery","UserKey","getUsers","isLoading","length","colSpan","map","id","description","Users","AppTitle","img","useDispatch","useAppSelector","useSelector"],"sourceRoot":""}