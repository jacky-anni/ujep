{"version":3,"file":"static/js/220.7306a9f5.chunk.js","mappings":"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","sources":["components/users/UsersLoading.tsx","shemaForms/account/SignupEditSchema.ts","components/users/EditUsersForm.tsx","pages/users/EditUsers.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { ThreeDots } from \"react-loader-spinner\";\r\n\r\nexport const UsersLoading = () => {\r\n  return (\r\n    <>\r\n      <center>\r\n        <ThreeDots\r\n          height='90'\r\n          width='90'\r\n          radius='9'\r\n          color='#7d56c2'\r\n          ariaLabel='three-dots-loading'\r\n          wrapperStyle={{ display: \"block\" }}\r\n          visible={true}\r\n        />\r\n        <p style={{ marginTop: \"-30px\" }}>Chargment en cours...</p>\r\n      </center>\r\n    </>\r\n  );\r\n};\r\n","import * as yup from \"yup\";\r\n// shema validation\r\nconst SignupEditSchema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email(\"L'email est invalide\")\r\n    .required(\"Ce champ est obligatoire !\"),\r\n  username: yup.string().required(\"Ce champ est obligatoire !\"),\r\n  role_name: yup.string().required(\"Ce champ est obligatoire !\"),\r\n});\r\n\r\nexport default SignupEditSchema;\r\n","import SubmitButtom from \"../Ui/form/SubmitButtom\";\r\nimport { addUser, editUser, getUsers } from \"../../actions/UserAction\";\r\nimport { Alert } from \"@mui/material\";\r\nimport { Toast } from \"../layout/Toast\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport SignupSchema from \"../../shemaForms/account/SignupSchema\";\r\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { UserKey } from \"../../ultils/keys\";\r\nimport SignupEditSchema from \"../../shemaForms/account/SignupEditSchema\";\r\n\r\nexport const EditUsersForm = ({ user }: any) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(SignupEditSchema),\r\n    defaultValues: {\r\n      email: user?.person.email,\r\n      username: user?.username,\r\n      role_name: user?.role.role_name,\r\n    },\r\n  });\r\n\r\n  const { data } = useQuery([UserKey], () => getUsers());\r\n\r\n  // create navigate\r\n  const navigate = useNavigate();\r\n  // initialize query client\r\n  const queryClient = useQueryClient();\r\n  // create mutation\r\n  const { isLoading, mutate, error, isError, isSuccess } = useMutation(\r\n    async (values) => {\r\n      await editUser(values, user);\r\n    },\r\n    {\r\n      onMutate: (result) => {\r\n        //Update the cache with the new user\r\n        return queryClient.setQueryData([UserKey], () =>\r\n          data.data.map((user: any) => (user.id === user.id ? result : user))\r\n        );\r\n      },\r\n      onSuccess: (result, variables, context) => {\r\n        Toast(\"success\", \"Utilisateur modifié avec succès\");\r\n        queryClient.invalidateQueries([UserKey]);\r\n        // navigate(\"/dashbord/users\");\r\n      },\r\n    }\r\n  );\r\n\r\n  const onSubmit = (data: any) => {\r\n    const values: any = {\r\n      email: data.email,\r\n      username: data.username,\r\n      role_name: data.role_name,\r\n    };\r\n    mutate(values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className='row'>\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer l'email</label>\r\n            <input\r\n              {...register(\"email\")}\r\n              className='form-control'\r\n              placeholder='contact@ujep.edu.ht'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.email?.message?.toString()}\r\n            </span>\r\n          </div>\r\n\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer le nom d'utilisateur</label>\r\n            <input\r\n              {...register(\"username\")}\r\n              className='form-control '\r\n              placeholder='@jacky'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.username?.message?.toString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-md-12 position-relative mb-2'>\r\n            <label>Choisir un role</label>\r\n            <select className='form-control' {...register(\"role_name\")}>\r\n              <option value=''>Choisir une option</option>\r\n              <option value={\"user\"}>Utilisateur</option>\r\n              <option value={\"admin\"}>Administrateur</option>\r\n            </select>\r\n\r\n            <span className='errors-field'>\r\n              {errors.role_name?.message?.toString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <SubmitButtom message={\"Soumettre\"} loading={isLoading} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import { useQuery } from \"@tanstack/react-query\";\r\nimport React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { showUser } from \"../../actions/UserAction\";\r\nimport { NotFoundTemplate } from \"../../components/layout/NotFoundTemplate\";\r\nimport { AppTitle } from \"../../components/partials/AppTitle\";\r\nimport { CreateUsersForm } from \"../../components/users/AddUsersForm\";\r\nimport { EditUsersForm } from \"../../components/users/EditUsersForm\";\r\nimport { UsersLoading } from \"../../components/users/UsersLoading\";\r\nimport { UserKey } from \"../../ultils/keys\";\r\n\r\nexport const EditUsers = () => {\r\n  const { user }: any = useParams();\r\n  const { data, isLoading, isError, error } = useQuery(\r\n    [UserKey, user],\r\n    () => showUser(user),\r\n    {\r\n      cacheTime: 0,\r\n    }\r\n  );\r\n\r\n  const err: any = error;\r\n\r\n  return (\r\n    <>\r\n      <AppTitle title={\"Modifier un utilisateur\"} img={\"users\"} />\r\n      <div className='bg-white'>\r\n        <div className='col-md-12 p-2'>\r\n          {isLoading ? (\r\n            <UsersLoading />\r\n          ) : isError ? (\r\n            <NotFoundTemplate message={err.response.data.message} />\r\n          ) : (\r\n            <EditUsersForm user={data} />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n"],"names":["UsersLoading","height","width","radius","color","ariaLabel","wrapperStyle","display","visible","style","marginTop","yup","shape","email","required","username","role_name","EditUsersForm","user","useForm","resolver","yupResolver","SignupEditSchema","defaultValues","person","role","register","handleSubmit","errors","reset","formState","data","useQuery","UserKey","getUsers","queryClient","useNavigate","useQueryClient","useMutation","values","editUser","onMutate","result","setQueryData","map","id","onSuccess","variables","context","Toast","invalidateQueries","isLoading","mutate","error","isError","isSuccess","onSubmit","className","placeholder","message","toString","value","SubmitButtom","loading","EditUsers","useParams","showUser","cacheTime","err","AppTitle","title","img","NotFoundTemplate","response"],"sourceRoot":""}