{"version":3,"file":"static/js/563.5ed499bc.chunk.js","mappings":"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","sources":["actions/EmployeesAction.ts","components/employee/CreateEmployeeForm.tsx","pages/employees/CreateEmpoyee.tsx","shemaForms/employees/AddEditEmplyeesSchema.ts"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// interface dat\r\ninterface Employee {\r\n  nom: string;\r\n  prenom: string;\r\n  sexe: string;\r\n  email: string;\r\n  telephone: string;\r\n  date_naissance: string;\r\n  fonction: string;\r\n  date_embauche: string;\r\n  salaire: string;\r\n}\r\n\r\n// showl all employees\r\nexport const GetEmployees = (page: number = 1) => {\r\n  return axios.get(`/employees?page=${page}`).then((res) => res.data);\r\n};\r\n\r\n// add employee\r\nexport const addEmployee = async (data: Employee) => {\r\n  return axios.post(\"employees\", data).then((res) => res.data);\r\n};\r\n\r\n// add employee\r\nexport const editEmployee = async (id: string, data: Employee) => {\r\n  return axios.patch(`/employees/${id}`, data).then((res) => res.data);\r\n};\r\n\r\n// get employee\r\nexport const showEmployee = async (id: any) => {\r\n  return axios.get(`/employees/${id}`).then((res) => res.data);\r\n};\r\n","import { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { addEmployee, GetEmployees } from \"../../actions/EmployeesAction\";\r\nimport AddEditEmplyeesSchema from \"../../shemaForms/employees/AddEditEmplyeesSchema\";\r\nimport { EmployeeKey } from \"../../ultils/keys\";\r\nimport { Toast } from \"../layout/Toast\";\r\nimport SubmitButtom from \"../Ui/form/SubmitButtom\";\r\n\r\nexport const CreateEmployeeForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(AddEditEmplyeesSchema),\r\n  });\r\n\r\n  // initialize query client\r\n  const queryClient = useQueryClient();\r\n  // create navigate\r\n  const navigate = useNavigate();\r\n\r\n  // create mutation\r\n  const { isLoading, mutate, error, isError, isSuccess } = useMutation(\r\n    async (values: any) => {\r\n      await addEmployee(values);\r\n    },\r\n    {\r\n      onMutate: (result) => {\r\n        //Update the cache with the new user\r\n        queryClient.invalidateQueries([EmployeeKey]);\r\n      },\r\n      onSuccess: (result, variables, context) => {\r\n        Toast(\"success\", \"Employé enregistré avec succès\");\r\n        reset();\r\n        navigate(\"/dashbord/employees\");\r\n      },\r\n    }\r\n  );\r\n\r\n  // define error\r\n  const err: any = error;\r\n\r\n  // submit form\r\n  const onSubmit = (data: any) => {\r\n    mutate(data);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        {isError && (\r\n          <Alert variant='filled' severity='error' className='mb-3'>\r\n            {err.response.data.message || \"Probleme d'enregistrement\"}\r\n          </Alert>\r\n        )}\r\n        <div className='row'>\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer le nom</label>\r\n            <input\r\n              className='form-control '\r\n              {...register(\"nom\")}\r\n              placeholder='Jacky'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.nom?.message?.toString()}\r\n            </span>\r\n          </div>\r\n\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer le prenom</label>\r\n            <input\r\n              className='form-control '\r\n              {...register(\"prenom\")}\r\n              placeholder='Anizaire'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.prenom?.message?.toString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer le sexe</label>\r\n            <select className='form-control' {...register(\"sexe\")}>\r\n              <option value=''>Choisir une option</option>\r\n              <option value={\"masculin\"}>Masculin</option>\r\n              <option value={\"feminin\"}>Feminin</option>\r\n            </select>\r\n\r\n            <span className='errors-field'>\r\n              {errors.sexe?.message?.toString()}\r\n            </span>\r\n          </div>\r\n\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer l'email</label>\r\n            <input\r\n              className='form-control '\r\n              {...register(\"email\")}\r\n              placeholder='anizairejacky@gmail.com'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.email?.message?.toString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer le telephone</label>\r\n            <input\r\n              className='form-control'\r\n              {...register(\"telephone\")}\r\n              placeholder='+509 3454 34 32'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.telephone?.message?.toString()}\r\n            </span>\r\n          </div>\r\n\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer la date de naissance</label>\r\n            <input\r\n              className='form-control '\r\n              {...register(\"date_naissance\")}\r\n              placeholder=''\r\n              type='date'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.date_naissance?.message?.toString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer la fonction</label>\r\n            <input\r\n              className='form-control '\r\n              {...register(\"fonction\")}\r\n              placeholder='Secretaire'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.fonction?.message?.toString()}\r\n            </span>\r\n          </div>\r\n\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer la date d'embauche</label>\r\n            <input\r\n              className='form-control '\r\n              {...register(\"date_embauche\")}\r\n              type='date'\r\n              placeholder=''\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.date_embauche?.message?.toString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div className='row'>\r\n          <div className='col-md-12 position-relative mb-2'>\r\n            <label>Entrer le salaire</label>\r\n            <input\r\n              className='form-control'\r\n              {...register(\"salaire\")}\r\n              placeholder='200'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.salaire?.message?.toString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <SubmitButtom message={\"Soumettre\"} loading={isLoading} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Form, Field, Formik } from \"formik\";\r\nimport { AppTitle } from \"../../components/partials/AppTitle\";\r\nimport SubmitButtom from \"../../components/Ui/form/SubmitButtom\";\r\nimport { addEmployee } from \"../../actions/EmployeesAction\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { CreateEmployeeForm } from \"../../components/employee/CreateEmployeeForm\";\r\n\r\nexport const CreateEmpoyee = () => {\r\n  return (\r\n    <>\r\n      <AppTitle title={\"Ajouter un employee\"} />\r\n      <div className='row'>\r\n        <div className='col-lg-12'>\r\n          <div className='card'>\r\n            <div className='card-body'>\r\n              <CreateEmployeeForm />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import * as yup from \"yup\";\r\nconst AddEditEmplyeesSchema = yup.object().shape({\r\n  nom: yup.string().required(\"Ce champ est obligatoire !\"),\r\n  prenom: yup.string().required(\"Ce champ est obligatoire !\"),\r\n  sexe: yup.string().required(\"Ce champ est obligatoire !\"),\r\n  email: yup\r\n    .string()\r\n    .email(\"L'email est invalide\")\r\n    .required(\"Ce champ est obligatoire !\"),\r\n  telephone: yup.string().required(\"Ce champ est obligatoire !\"),\r\n  date_naissance: yup\r\n    .date()\r\n    .required(\"Cette date n'est pas valide!\")\r\n    .typeError(\"Cette date n'est pas valide\"),\r\n  fonction: yup.string().required(\"Ce champ est obligatoire !\"),\r\n  date_embauche: yup\r\n    .date()\r\n    .required(\"Cette date n'est pas valide !\")\r\n    .typeError(\"Cette date n'est pas valide\"),\r\n  salaire: yup\r\n    .number()\r\n    .min(0, \"La note ne doit pas être inferieur à 0\")\r\n    .typeError(\"vous devez spécifier un nombre\"),\r\n});\r\n\r\nexport default AddEditEmplyeesSchema;\r\n"],"names":["GetEmployees","page","axios","then","res","data","addEmployee","editEmployee","id","showEmployee","CreateEmployeeForm","useForm","resolver","yupResolver","AddEditEmplyeesSchema","register","handleSubmit","reset","errors","formState","queryClient","useQueryClient","navigate","useNavigate","useMutation","values","onMutate","result","invalidateQueries","EmployeeKey","onSuccess","variables","context","Toast","isLoading","mutate","error","isError","err","isSuccess","onSubmit","Alert","variant","severity","className","response","message","placeholder","nom","toString","prenom","value","sexe","email","telephone","type","date_naissance","fonction","date_embauche","salaire","SubmitButtom","loading","CreateEmpoyee","AppTitle","title","yup","shape","required","typeError","min"],"sourceRoot":""}