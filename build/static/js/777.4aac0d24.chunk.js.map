{"version":3,"file":"static/js/777.4aac0d24.chunk.js","mappings":"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","sources":["components/users/AddUsersForm.tsx","pages/users/CreateUsers.tsx","shemaForms/account/SignupSchema.ts"],"sourcesContent":["import SubmitButtom from \"../Ui/form/SubmitButtom\";\r\nimport { addUser } from \"../../actions/UserAction\";\r\nimport { Alert } from \"@mui/material\";\r\nimport { Toast } from \"../layout/Toast\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport SignupSchema from \"../../shemaForms/account/SignupSchema\";\r\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { UserKey } from \"../../ultils/keys\";\r\n\r\nexport const CreateUsersForm = () => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { errors },\r\n  } = useForm({\r\n    resolver: yupResolver(SignupSchema),\r\n  });\r\n\r\n  // create navigate\r\n  const navigate = useNavigate();\r\n  // initialize query client\r\n  const queryClient = useQueryClient();\r\n  // create mutation\r\n  const { isLoading, mutate, error, isError, isSuccess } = useMutation(\r\n    async (values) => {\r\n      await addUser(values);\r\n    },\r\n    {\r\n      onMutate: (result) => {\r\n        //Update the cache with the new user\r\n        //queryClient.setQueryData([UserKey], () => [result, ...data]);\r\n      },\r\n      onSuccess: (result, variables, context) => {\r\n        Toast(\"success\", \"Faculté enregistré avec succès\");\r\n        queryClient.invalidateQueries([UserKey]);\r\n        reset();\r\n        navigate(\"/dashbord/users\");\r\n      },\r\n    }\r\n  );\r\n\r\n  const onSubmit = (data: any) => {\r\n    const values: any = {\r\n      email: data.email,\r\n      username: data.username,\r\n      password: data.password,\r\n      role_name: data.role_name,\r\n    };\r\n    mutate(values);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className='row'>\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer l'email</label>\r\n            <input\r\n              {...register(\"email\")}\r\n              className='form-control'\r\n              placeholder='contact@ujep.edu.ht'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.email?.message?.toString()}\r\n            </span>\r\n          </div>\r\n\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer le nom d'utilisateur</label>\r\n            <input\r\n              {...register(\"username\")}\r\n              className='form-control '\r\n              placeholder='@jacky'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.username?.message?.toString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-md-12 position-relative mb-2'>\r\n            <label>Choisir un role</label>\r\n            <select className='form-control' {...register(\"role_name\")}>\r\n              <option value=''>Choisir une option</option>\r\n              <option value={\"user\"}>Utilisateur</option>\r\n              <option value={\"admin\"}>Administrateur</option>\r\n            </select>\r\n\r\n            <span className='errors-field'>\r\n              {errors.role_name?.message?.toString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className='row'>\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Entrer le mot de passe</label>\r\n            <input\r\n              {...register(\"password\")}\r\n              type='password'\r\n              className='form-control '\r\n              placeholder='Entrer le mot de passe'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.password?.message?.toString()}\r\n            </span>\r\n          </div>\r\n\r\n          <div className='col-md-6 position-relative mb-2'>\r\n            <label>Répéter le mot de passe</label>\r\n            <input\r\n              {...register(\"password_confirm\")}\r\n              type='password'\r\n              className='form-control '\r\n              placeholder='Répéter le mot de passe'\r\n            />\r\n\r\n            <span className='errors-field'>\r\n              {errors.password_confirm?.message?.toString()}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <SubmitButtom message={\"Soumettre\"} loading={isLoading} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { AppTitle } from \"../../components/partials/AppTitle\";\r\nimport { CreateUsersForm } from \"../../components/users/AddUsersForm\";\r\n\r\nexport const CreateUsers = () => {\r\n  return (\r\n    <>\r\n      <AppTitle title={\"Ajouter un utilisateur\"} img={\"users\"} />\r\n      <div className='bg-white'>\r\n        <div className='col-md-12 p-2'>\r\n          <CreateUsersForm />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import * as yup from \"yup\";\r\n// shema validation\r\nconst SignupSchema = yup.object().shape({\r\n  email: yup\r\n    .string()\r\n    .email(\"L'email est invalide\")\r\n    .required(\"Ce champ est obligatoire !\"),\r\n  username: yup.string().required(\"Ce champ est obligatoire !\"),\r\n  role_name: yup.string().required(\"Ce champ est obligatoire !\"),\r\n  password: yup\r\n    .string()\r\n    .required(\"Ce champ est obligatoire !\")\r\n    .matches(\r\n      /^(?=.{8,})/,\r\n      \"Le mot de passe doit contenir au moins 8 caractères\"\r\n    ),\r\n  password_confirm: yup\r\n    .string()\r\n    .required(\"Ce champ est obligatoire !\")\r\n    .oneOf(\r\n      [yup.ref(\"password\"), null],\r\n      \"Les mots de passe ne sont pas iddentiques\"\r\n    ),\r\n});\r\n\r\nexport default SignupSchema;\r\n"],"names":["CreateUsersForm","useForm","resolver","yupResolver","SignupSchema","register","handleSubmit","reset","errors","formState","navigate","useNavigate","queryClient","useQueryClient","useMutation","values","addUser","onMutate","result","onSuccess","variables","context","Toast","invalidateQueries","UserKey","isLoading","mutate","error","isError","isSuccess","onSubmit","data","email","username","password","role_name","className","placeholder","message","toString","value","type","password_confirm","SubmitButtom","loading","CreateUsers","AppTitle","title","img","yup","shape","required","matches","oneOf"],"sourceRoot":""}